        .section .data
results:
        .rept 21
        .word 0xffffffff      # 先統一初始化成 0xffffffff
        .endr

        .section .text
        .globl _start
_start:
        ################################################################
        # 1. 設定堆疊指標 (示範用，真實環境值可能不同)
        ################################################################
        lui     sp, 0x1       # sp = 0x10000 (對應 0x1 << 12 = 0x1000, 視平台而定)

        ################################################################
        # 2. Fibonacci(0) 與 Fibonacci(1) 直接寫入 results[0], results[1]
        ################################################################
        la      t1, results   # t1 指向 results[0]
        li      s0, 0         # s0 = fib(i-2)，先放 fib(0) = 0
        sw      s0, 0(t1)     # results[0] = 0

        addi    t1, t1, 4
        li      s1, 1         # s1 = fib(i-1)，先放 fib(1) = 1
        sw      s1, 0(t1)     # results[1] = 1

        ################################################################
        # 3. 用迴圈算出 Fibonacci(2) ~ Fibonacci(19) 依序寫入
        ################################################################
        li      t2, 2         # i = 2
        addi    t1, t1, 4     # t1 現在對應 results[2]

fib_loop:
        li      t0, 21        # 我們要算到 fib(19)，共 20 筆
        bge     t2, t0, exit  # i >= 20 就離開（因為最後一筆是 fib(19)）

        add     a0, s0, s1    # fib(i) = fib(i-2) + fib(i-1)
        sw      a0, 0(t1)     # results[i] = fib(i)

        mv      s0, s1        # 更新 s0 = fib(i-1)
        mv      s1, a0        # 更新 s1 = fib(i)

        addi    t1, t1, 4     # t1 移到下一個元素位置
        addi    t2, t2, 1     # i++
        j       fib_loop

exit:
        ################################################################
        # 4. 結束程式
        ################################################################
        li      a7, 93        # syscall: exit
        li      a0, 0         # return code = 0
        ecall
